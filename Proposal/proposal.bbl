\begin{thebibliography}{10}

\bibitem{abel2010miniagda}
{\sc Abel, A.}
\newblock Miniagda: Integrating sized and dependent types.
\newblock {\em arXiv preprint arXiv:1012.4896\/} (2010).

\bibitem{andoni2003evaluating}
{\sc Andoni, A., Daniliuc, D., Khurshid, S., and Marinov, D.}
\newblock Evaluating the “small scope hypothesis”.
\newblock In {\em In Popl\/} (2003), vol.~2, Citeseer.

\bibitem{brown2007monadic}
{\sc Brown, D., and Cook, W.~R.}
\newblock {\em Monadic memoization mixins}.
\newblock Computer Science Department, University of Texas at Austin, 2007.

\bibitem{claessen2015generating}
{\sc Claessen, K., Dureg{\aa}rd, J., and Pa{\l}ka, M.~H.}
\newblock Generating constrained random data with uniform distribution.
\newblock {\em Journal of functional programming 25\/} (2015).

\bibitem{claessen2011quickcheck}
{\sc Claessen, K., and Hughes, J.}
\newblock Quickcheck: a lightweight tool for random testing of haskell
  programs.
\newblock {\em Acm sigplan notices 46}, 4 (2011), 53--64.

\bibitem{claessen2010quickspec}
{\sc Claessen, K., Smallbone, N., and Hughes, J.}
\newblock Quickspec: Guessing formal specifications using testing.
\newblock In {\em International Conference on Tests and Proofs\/} (2010),
  Springer, pp.~6--21.

\bibitem{cook1971complexity}
{\sc Cook, S.~A.}
\newblock The complexity of theorem-proving procedures.
\newblock In {\em Proceedings of the third annual ACM symposium on Theory of
  computing\/} (1971), ACM, pp.~151--158.

\bibitem{dagand2017essence}
{\sc Dagand, P.-{\'E}.}
\newblock The essence of ornaments.
\newblock {\em Journal of Functional Programming 27\/} (2017).

\bibitem{de2014true}
{\sc de~Vries, E., and L{\"o}h, A.}
\newblock True sums of products.
\newblock In {\em Proceedings of the 10th ACM SIGPLAN workshop on Generic
  programming\/} (2014), ACM, pp.~83--94.

\bibitem{denes2014quickchick}
{\sc D{\'e}n{\`e}s, M., Hritcu, C., Lampropoulos, L., Paraskevopoulou, Z., and
  Pierce, B.~C.}
\newblock Quickchick: Property-based testing for coq.
\newblock In {\em The Coq Workshop\/} (2014).

\bibitem{duregaard2013feat}
{\sc Dureg{\aa}rd, J., Jansson, P., and Wang, M.}
\newblock Feat: functional enumeration of algebraic types.
\newblock {\em ACM SIGPLAN Notices 47}, 12 (2013), 61--72.

\bibitem{grygiel2013counting}
{\sc Grygiel, K., and Lescanne, P.}
\newblock Counting and generating lambda terms.
\newblock {\em Journal of Functional Programming 23}, 5 (2013), 594--628.

\bibitem{hinze2003fun}
{\sc Hinze, R., et~al.}
\newblock Fun with phantom types.
\newblock {\em The fun of programming\/} (2003), 245--262.

\bibitem{ko2016programming}
{\sc Ko, H.-S., and Gibbons, J.}
\newblock Programming with ornaments.
\newblock {\em Journal of Functional Programming 27\/} (2016).

\bibitem{lampropoulos2017generating}
{\sc Lampropoulos, L., Paraskevopoulou, Z., and Pierce, B.~C.}
\newblock Generating good generators for inductive relations.
\newblock {\em Proceedings of the ACM on Programming Languages 2}, POPL (2017),
  45.

\bibitem{loh2011generic}
{\sc L{\"o}h, A., and Magalhaes, J.~P.}
\newblock Generic programming with indexed functors.
\newblock In {\em Proceedings of the seventh ACM SIGPLAN workshop on Generic
  programming\/} (2011), ACM, pp.~1--12.

\bibitem{magalhaes2011generic}
{\sc Magalh{\~a}es, J.~P., and Jeuring, J.}
\newblock Generic programming for indexed datatypes.
\newblock In {\em Proceedings of the seventh ACM SIGPLAN workshop on Generic
  programming\/} (2011), ACM, pp.~37--46.

\bibitem{matela2017tools}
{\sc Matela~Braquehais, R.}
\newblock {\em Tools for Discovery, Refinement and Generalization of Functional
  Properties by Enumerative Testing}.
\newblock PhD thesis, University of York, 2017.

\bibitem{miraldo2018sums}
{\sc Miraldo, V.~C., and Serrano, A.}
\newblock Sums of products for mutually recursive datatypes: the
  appropriationist’s view on generic programming.
\newblock In {\em Proceedings of the 3rd ACM SIGPLAN International Workshop on
  Type-Driven Development\/} (2018), ACM, pp.~65--77.

\bibitem{moczurad2000statistical}
{\sc Moczurad, M., Tyszkiewicz, J., and Zaionc, M.}
\newblock Statistical properties of simple types.
\newblock {\em Mathematical Structures in Computer Science 10}, 5 (2000),
  575--594.

\bibitem{norell2008dependently}
{\sc Norell, U.}
\newblock Dependently typed programming in agda.
\newblock In {\em International School on Advanced Functional Programming\/}
  (2008), Springer, pp.~230--266.

\bibitem{palka2011testing}
{\sc Pa{\l}ka, M.~H., Claessen, K., Russo, A., and Hughes, J.}
\newblock Testing an optimising compiler by generating random lambda terms.
\newblock In {\em Proceedings of the 6th International Workshop on Automation
  of Software Test\/} (2011), ACM, pp.~91--97.

\bibitem{paraskevopoulou2015foundational}
{\sc Paraskevopoulou, Z., Hri{\c{t}}cu, C., D{\'e}n{\`e}s, M., Lampropoulos,
  L., and Pierce, B.~C.}
\newblock Foundational property-based testing.
\newblock In {\em International Conference on Interactive Theorem Proving\/}
  (2015), Springer, pp.~325--343.

\bibitem{runciman2008smallcheck}
{\sc Runciman, C., Naylor, M., and Lindblad, F.}
\newblock Smallcheck and lazy smallcheck: automatic exhaustive testing for
  small values.
\newblock In {\em Acm sigplan notices\/} (2008), vol.~44, ACM, pp.~37--48.

\bibitem{serrano2018generic}
{\sc Serrano, A., and Miraldo, V.~C.}
\newblock Generic programming of all kinds.
\newblock In {\em Proceedings of the 11th ACM SIGPLAN International Symposium
  on Haskell\/} (2018), ACM, pp.~41--54.

\bibitem{hedgehog}
{\sc Stanley, J.}
\newblock hedgehog: Hedgehog will eat all your bugs.
\newblock \url{https://hackage.haskell.org/package/hedgehog}, 2019.
\newblock [Online; accessed 26-Feb-2019].

\bibitem{swadi2006monadic}
{\sc Swadi, K., Taha, W., Kiselyov, O., and Pasalic, E.}
\newblock A monadic approach for avoiding code duplication when staging
  memoized functions.
\newblock In {\em Proceedings of the 2006 ACM SIGPLAN symposium on Partial
  evaluation and semantics-based program manipulation\/} (2006), ACM,
  pp.~160--169.

\bibitem{wadler2015propositions}
{\sc Wadler, P.}
\newblock Propositions as types.
\newblock {\em Communications of the ACM 58}, 12 (2015), 75--84.

\bibitem{wang2005generating}
{\sc Wang, J.}
\newblock Generating random lambda calculus terms.
\newblock {\em Unpublished manuscript\/} (2005).

\bibitem{yakushev2009generic}
{\sc Yakushev, A.~R., Holdermans, S., L{\"o}h, A., and Jeuring, J.}
\newblock Generic programming with fixed points for mutually recursive
  datatypes.
\newblock In {\em ACM Sigplan Notices\/} (2009), vol.~44, ACM, pp.~233--244.

\bibitem{yorgey2010species}
{\sc Yorgey, B.~A.}
\newblock Species and functors and types, oh my!
\newblock In {\em ACM Sigplan Notices\/} (2010), vol.~45, ACM, pp.~147--158.

\end{thebibliography}
