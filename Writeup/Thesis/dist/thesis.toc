\contentsline {chapter}{Declaration}{iii}% 
\contentsline {chapter}{Abstract}{v}% 
\contentsline {chapter}{\numberline {1}Introduction}{1}% 
\contentsline {chapter}{\numberline {2}Background}{3}% 
\contentsline {section}{\numberline {2.1}Type Theory}{3}% 
\contentsline {subsection}{\numberline {2.1.1}Intuitionistic Type Theory}{3}% 
\contentsline {subsection}{\numberline {2.1.2}The Curry-Howard Equivalence}{3}% 
\contentsline {paragraph}{\textbf {Example}}{4}% 
\contentsline {paragraph}{\textbf {Example}}{4}% 
\contentsline {subsection}{\numberline {2.1.3}Dependent Types}{5}% 
\contentsline {paragraph}{\textbf {Example}}{5}% 
\contentsline {section}{\numberline {2.2}Agda}{5}% 
\contentsline {subsection}{\numberline {2.2.1}Codata and Sized Types}{5}% 
\contentsline {paragraph}{\textbf {Example}}{6}% 
\contentsline {paragraph}{\textbf {Example}}{6}% 
\contentsline {subsection}{\numberline {2.2.2}Universe Polymorphism}{7}% 
\contentsline {section}{\numberline {2.3}Generic Programming and Type Universes}{8}% 
\contentsline {subsection}{\numberline {2.3.1}Design Pattern}{8}% 
\contentsline {paragraph}{\textbf {Example}}{8}% 
\contentsline {subsection}{\numberline {2.3.2}Example Universes}{8}% 
\contentsline {paragraph}{Regular Types}{8}% 
\contentsline {paragraph}{Indexed Containers}{9}% 
\contentsline {paragraph}{Indexed Descriptions}{9}% 
\contentsline {chapter}{\numberline {3}Literature Review}{11}% 
\contentsline {section}{\numberline {3.1}Property Based Testing}{11}% 
\contentsline {subsection}{\numberline {3.1.1}Existing Libraries}{11}% 
\contentsline {subsubsection}{QuickCheck}{11}% 
\contentsline {subsubsection}{(Lazy) SmallCheck}{12}% 
\contentsline {subsubsection}{LeanCheck}{12}% 
\contentsline {subsubsection}{Hegdgehog}{12}% 
\contentsline {subsubsection}{Feat}{12}% 
\contentsline {subsubsection}{QuickChick}{13}% 
\contentsline {subsection}{\numberline {3.1.2}Generating Constrained Test Data}{13}% 
\contentsline {subsection}{\numberline {3.1.3}Automatic Generation of Specifications}{13}% 
\contentsline {section}{\numberline {3.2}Techniques for Generating Test Data}{13}% 
\contentsline {subsection}{\numberline {3.2.1}Lambda Terms}{13}% 
\contentsline {subsection}{\numberline {3.2.2}Inductive Relations in Coq}{14}% 
\contentsline {section}{\numberline {3.3}Generic Programming \& Type Universes}{14}% 
\contentsline {subsection}{\numberline {3.3.1}SOP (Sum of Products)}{14}% 
\contentsline {chapter}{\numberline {4}A Combinator Library for Generators}{15}% 
\contentsline {section}{\numberline {4.1}The Type of Generators}{15}% 
\contentsline {subsection}{\numberline {4.1.1}Examples in Existing Libraries}{15}% 
\contentsline {subsection}{\numberline {4.1.2}Separating Structure and Interpretation}{15}% 
\contentsline {subsection}{\numberline {4.1.3}The \ensuremath {\leavevmode \begingroup \color {hsblue3}\mathit {Gen}\endgroup } Datatype}{16}% 
\contentsline {subsection}{\numberline {4.1.4}Generator Interpretations}{17}% 
\contentsline {section}{\numberline {4.2}Generalization to Indexed Datatypes}{18}% 
\contentsline {section}{\numberline {4.3}Interpreting Generators as Enumerations}{19}% 
\contentsline {section}{\numberline {4.4}Properties for Enumerations}{20}% 
\contentsline {section}{\numberline {4.5}Generating Function Types}{20}% 
\contentsline {section}{\numberline {4.6}Monadic Generators}{20}% 
\contentsline {chapter}{\numberline {5}Generic Generators for Regular types}{21}% 
\contentsline {section}{\numberline {5.1}The universe of regular types}{21}% 
\contentsline {paragraph}{\textbf {Example}}{21}% 
\contentsline {subsection}{\numberline {5.1.1}Non-regular data types}{23}% 
\contentsline {section}{\numberline {5.2}Generic Generators for regular types}{23}% 
\contentsline {subsection}{\numberline {5.2.1}Defining functions over codes}{23}% 
\contentsline {subsection}{\numberline {5.2.2}Composing generic generators}{23}% 
\contentsline {paragraph}{\textbf {Example}}{24}% 
\contentsline {section}{\numberline {5.3}Enumerators for regular types}{24}% 
\contentsline {subsection}{\numberline {5.3.1}A generic enumerator}{24}% 
\contentsline {subsection}{\numberline {5.3.2}Proving completeness}{24}% 
\contentsline {chapter}{\numberline {6}Deriving Generators for Indexed Containers}{25}% 
\contentsline {chapter}{\numberline {7}Deriving Generators for Indexed Descriptions}{27}% 
\contentsline {section}{\numberline {7.1}Universe Description}{27}% 
\contentsline {subsection}{\numberline {7.1.1}Definition}{27}% 
\contentsline {subsection}{\numberline {7.1.2}Examples}{28}% 
\contentsline {section}{\numberline {7.2}Generic Generators for Indexed Descriptions}{28}% 
\contentsline {chapter}{\numberline {8}Program Term Generation}{29}% 
\contentsline {chapter}{\numberline {9}Implementation in Haskell}{31}% 
\contentsline {chapter}{\numberline {10}Conclusion \& Further Work}{33}% 
\contentsline {chapter}{\numberline {A}Datatype Definitions}{35}% 
\contentsline {section}{\numberline {A.1}Natural numbers}{35}% 
\contentsline {section}{\numberline {A.2}Finite Sets}{35}% 
\contentsline {section}{\numberline {A.3}Vectors}{36}% 
\contentsline {section}{\numberline {A.4}Simple Types}{36}% 
\contentsline {section}{\numberline {A.5}Contexts}{36}% 
\contentsline {section}{\numberline {A.6}Raw $\mitlambda $-Terms}{37}% 
\contentsline {section}{\numberline {A.7}Lists}{37}% 
\contentsline {section}{\numberline {A.8}Well-scoped $\mitlambda $-terms}{37}% 
